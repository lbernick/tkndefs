apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: mario-build-and-push-image
  labels:
    created-by: lbernick
spec:
  params:
  - name: pullRequestID
    description: The pullRequestID
  - name: gitRepository
    description: The git repository that hosts context and Dockerfile
  - name: gitRevision
    description: The Git revision to be used.
  - name: contextPath
    description: The path to the context within 'gitRepository'
  - name: targetImage
    description: The fully qualified image target e.g. repo/name:tag.
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: build-and-push-
      labels:
        mario.bot/pull-request-id: $(tt.params.pullRequestID)
    spec:
      serviceAccountName: mario-releaser
      pipelineSpec:
        workspaces:
        - name: source-code
        - name: gcp-secret
        params:
        - name: contextPath
        - name: gitRepository
        - name: gitRevision
        - name: targetImage
        - name: contextPath
        - name: pullRequestID
        - name: cloudEventSink
          default: http://el-github-feedback-trigger.mario:8080
        tasks:
        - name: clone-and-build
          taskRef:
            apiVersion: tekton.dev/v1alpha1
            kind: PipelineToTaskRun
            name: clone-and-build-lb-exp
          params:
          - name: gitRepository
            value: $(params.gitRepository)
          - name: gitRevision
            value: $(params.gitRevision)
          - name: targetImage
            value: $(params.targetImage)
          - name: contextPath
            value: $(params.contextPath)
          - name: pullRequestID
            value: $(params.pullRequestID)
          workspaces:
          - name: source-code
            workspace: source-code
          - name: gcp-secret
            workspace: gcp-secret
        finally:
        - name: publish-event
          params:
          - name: sink
            value: $(params.cloudEventSink)
          - name: eventID
            value: $(context.taskRun.name)
          - name: eventType
            value: "dev.tekton.event.task.$(tasks.clone-and-build.status)"
          - name: data
            value: '{"pull-request-id": "$(params.pullRequestID)", "build-pipelinerun": "$(context.pipelineRun.name)", "git-url": "https://$(params.gitRepository)", "git-revision": "$(params.gitRevision)", "target-image": "$(params.targetImage)", "status": "$(tasks.clone-and-build.status)"}'
          taskRef:
            name: cloudevent
            bundle: gcr.io/tekton-releases/catalog/upstream/cloudevent:0.1
      params:
      - name: pullRequestID
        value: $(tt.params.pullRequestID)
      - name: gitRepository
        value: $(tt.params.gitRepository)
      - name: gitRevision
        value: $(tt.params.gitRevision)
      - name: contextPath
        value: $(tt.params.contextPath)
      - name: targetImage
        value: $(tt.params.targetImage)
      workspaces:
      - name: source-code
        volumeClaimTemplate:
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 50Mi
      - name: gcp-secret
        secret:
          secretName: release-secret
